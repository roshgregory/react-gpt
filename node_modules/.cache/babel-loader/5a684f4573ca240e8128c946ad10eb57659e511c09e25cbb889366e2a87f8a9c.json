{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roshan\\\\Documents\\\\pet\\\\react-gpt\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot(_ref) {\n  _s();\n  let {\n    apiKey,\n    model\n  } = _ref;\n  const [message, setMessage] = useState('');\n  const [conversation, setConversation] = useState([]);\n  useEffect(() => {\n    // Start a new conversation when the component mounts\n    const url = `https://api.openai.com/v1/chat/completions`;\n    const data = JSON.stringify({\n      \"model\": \"gpt-3.5-turbo\",\n      \"messages\": [{\n        \"role\": \"user\",\n        \"content\": \"Say this is a test!\"\n      }],\n      \"temperature\": 0.7\n    });\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${apiKey}`\n    };\n    try {\n      const response = axios.post(url, data, {\n        headers\n      });\n      console.log(response);\n      setResult(response.data.choices[0].text);\n      setMessage('');\n    } catch (error) {\n      console.error(error);\n      setResult(`Error: ${error.message}`);\n    }\n    axios.post(`https://api.openai.com/v1/chat/completions`, {\n      model: model\n    }, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(response => {\n      setConversation([{\n        text: 'Hello! How can I assist you today?',\n        sender: 'bot'\n      }]);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [apiKey, model]);\n  const sendMessage = () => {\n    // Add the user's message to the conversation\n    setConversation([...conversation, {\n      text: message,\n      sender: 'user'\n    }]);\n\n    // Send the user's message to the API\n    axios.post(`https://api.openai.com/v1/chat/completions`, {\n      text: message\n    }, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(response => {\n      // Add the bot's response to the conversation\n      setConversation([...conversation, {\n        text: response.data.choices[0].text,\n        sender: 'bot'\n      }]);\n    }).catch(error => {\n      console.error(error);\n    });\n\n    // Clear the message input\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: conversation.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [message.sender === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"You: \", message.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), message.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Bot: \", message.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"utRjAFFc6CMA1M19bUBNf9ubM3M=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Chatbot","_ref","_s","apiKey","model","message","setMessage","conversation","setConversation","url","data","JSON","stringify","headers","response","post","console","log","setResult","choices","text","error","Authorization","then","sender","catch","sendMessage","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Roshan/Documents/pet/react-gpt/src/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Chatbot({ apiKey, model }) {\r\n  const [message, setMessage] = useState('');\r\n  const [conversation, setConversation] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Start a new conversation when the component mounts\r\n    const url = `https://api.openai.com/v1/chat/completions`;\r\n          const data = JSON.stringify({ \"model\":\"gpt-3.5-turbo\" , \"messages\": [{\"role\": \"user\", \"content\": \"Say this is a test!\"}], \"temperature\": 0.7 });\r\n          const headers = {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${apiKey}`,\r\n          };\r\n    \r\n          try {\r\n            const response = axios.post(url, data, { headers });\r\n            console.log(response)\r\n            setResult(response.data.choices[0].text);\r\n            setMessage('');\r\n          } catch (error) {\r\n            console.error(error);\r\n            setResult(`Error: ${error.message}`);\r\n          }\r\n    axios\r\n      .post(`https://api.openai.com/v1/chat/completions`, {\r\n        model: model,\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${apiKey}`,\r\n        },\r\n      })\r\n      .then(response => {\r\n        setConversation([{\r\n          text: 'Hello! How can I assist you today?',\r\n          sender: 'bot',\r\n        }]);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }, [apiKey, model]);\r\n\r\n  const sendMessage = () => {\r\n    // Add the user's message to the conversation\r\n    setConversation([\r\n      ...conversation,\r\n      {\r\n        text: message,\r\n        sender: 'user',\r\n      },\r\n    ]);\r\n\r\n    // Send the user's message to the API\r\n    axios\r\n      .post(`https://api.openai.com/v1/chat/completions`, {\r\n        text: message,\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${apiKey}`,\r\n        },\r\n      })\r\n      .then(response => {\r\n        // Add the bot's response to the conversation\r\n        setConversation([\r\n          ...conversation,\r\n          {\r\n            text: response.data.choices[0].text,\r\n            sender: 'bot',\r\n          },\r\n        ]);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n\r\n    // Clear the message input\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {conversation.map((message, index) => (\r\n          <div key={index}>\r\n            {message.sender === 'user' && (\r\n              <div>\r\n                You: {message.text}\r\n              </div>\r\n            )}\r\n            {message.sender === 'bot' && (\r\n              <div>\r\n                Bot: {message.text}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input type=\"text\" value={message} onChange={e => setMessage(e.target.value)} />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}