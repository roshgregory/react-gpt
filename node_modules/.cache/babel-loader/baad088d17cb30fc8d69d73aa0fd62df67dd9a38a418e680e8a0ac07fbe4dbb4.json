{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roshan\\\\Documents\\\\pet\\\\react-gpt\\\\src\\\\App.js\";\nimport React from 'react';\nimport Chatbot from './Chatbot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chatbot, {\n      apiKey: \"your-api-key\",\n      model: \"your-model-name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import Chatbot from './Chatbot';\n\n// function App() {\n//     const [message, setMessage] = useState('');\n//     const [model, setModel] = useState('');\n//     const [result, setResult] = useState('');\n//     const [apiKey, setApiKey] = useState(localStorage.getItem('chatgpt_api_key') || '');\n\n//     const handleApiKeyChange = (event) => {\n//       setApiKey(event.target.value);\n//       localStorage.setItem('chatgpt_api_key', event.target.value);\n//     };\n\n//     const handleModelChange = (event) => {\n//       setModel(event.target.value);\n//     };\n\n//     const handleSubmit = async (event) => {\n//       event.preventDefault();\n\n//       if (!message) {\n//         return;\n//       }\n\n//       if (!apiKey) {\n//         alert('Please enter your ChatGPT API key.');\n//         return;\n//       }\n\n//       const url = `https://api.openai.com/v1/chat/completions`;\n//       const data = JSON.stringify({ \"model\":\"gpt-3.5-turbo\" , \"messages\": [{\"role\": \"user\", \"content\": \"Say this is a test!\"}], \"temperature\": 0.7 });\n//       const headers = {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${apiKey}`,\n//       };\n\n//       try {\n//         const response = await axios.post(url, data, { headers });\n//         console.log(response)\n//         setResult(response.data.choices[0].text);\n//         setMessage('');\n//       } catch (error) {\n//         console.error(error);\n//         setResult(`Error: ${error.message}`);\n//       }\n//     };\n\n//     return (\n//       <div>\n//         <h1>ChatGPT</h1>\n//         <form onSubmit={handleSubmit}>\n//           <label>\n//             API key:\n//             <input type=\"text\" value={apiKey} onChange={handleApiKeyChange} />\n//           </label>\n//           <br />\n//           <label>\n//             Model:\n//             <select value={model} onChange={handleModelChange}>\n//               <option value=\"davinci-codex\">davinci-codex</option>\n//               <option value=\"davinci\">davinci</option>\n//               <option value=\"curie\">curie</option>\n//               <option value=\"babbage\">babbage</option>\n//               <option value=\"ada\">ada</option>\n//               <option value=\"gpt-3-175b\">gpt-3-175b</option>\n//               <option value=\"gpt-3-13b\">gpt-3-13b</option>\n//               <option value=\"gpt-3-6b\">gpt-3-6b</option>\n//               <option value=\"gpt-3-2.7b\">gpt-3-2.7b</option>\n//               <option value=\"gpt-3-1.75b\">gpt-3-1.75b</option>\n//               <option value=\"gpt-3-1.3b\">gpt-3-1.3b</option>\n//               <option value=\"gpt-3-761\">gpt-3-761</option>\n//               <option value=\"gpt-4-0314\">gpt-4-0314</option>\n//             </select>\n//           </label>\n//           <br />\n//           <label>\n//             Message:\n//             <input\n//               type=\"text\"\n//               value={message}\n//               onChange={(event) => setMessage(event.target.value)}\n//             />\n//           </label>\n//           <br />\n//           <button type=\"submit\">Send</button>\n//         </form>\n//         <div>\n//           {result ? <p>{result}</p> : null}\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Chatbot","jsxDEV","_jsxDEV","App","children","apiKey","model","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Roshan/Documents/pet/react-gpt/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport Chatbot from './Chatbot';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Chatbot apiKey=\"your-api-key\" model=\"your-model-name\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import Chatbot from './Chatbot';\r\n\r\n// function App() {\r\n//     const [message, setMessage] = useState('');\r\n//     const [model, setModel] = useState('');\r\n//     const [result, setResult] = useState('');\r\n//     const [apiKey, setApiKey] = useState(localStorage.getItem('chatgpt_api_key') || '');\r\n  \r\n//     const handleApiKeyChange = (event) => {\r\n//       setApiKey(event.target.value);\r\n//       localStorage.setItem('chatgpt_api_key', event.target.value);\r\n//     };\r\n  \r\n//     const handleModelChange = (event) => {\r\n//       setModel(event.target.value);\r\n//     };\r\n  \r\n//     const handleSubmit = async (event) => {\r\n//       event.preventDefault();\r\n  \r\n//       if (!message) {\r\n//         return;\r\n//       }\r\n  \r\n//       if (!apiKey) {\r\n//         alert('Please enter your ChatGPT API key.');\r\n//         return;\r\n//       }\r\n  \r\n//       const url = `https://api.openai.com/v1/chat/completions`;\r\n//       const data = JSON.stringify({ \"model\":\"gpt-3.5-turbo\" , \"messages\": [{\"role\": \"user\", \"content\": \"Say this is a test!\"}], \"temperature\": 0.7 });\r\n//       const headers = {\r\n//         'Content-Type': 'application/json',\r\n//         'Authorization': `Bearer ${apiKey}`,\r\n//       };\r\n  \r\n//       try {\r\n//         const response = await axios.post(url, data, { headers });\r\n//         console.log(response)\r\n//         setResult(response.data.choices[0].text);\r\n//         setMessage('');\r\n//       } catch (error) {\r\n//         console.error(error);\r\n//         setResult(`Error: ${error.message}`);\r\n//       }\r\n//     };\r\n  \r\n//     return (\r\n//       <div>\r\n//         <h1>ChatGPT</h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <label>\r\n//             API key:\r\n//             <input type=\"text\" value={apiKey} onChange={handleApiKeyChange} />\r\n//           </label>\r\n//           <br />\r\n//           <label>\r\n//             Model:\r\n//             <select value={model} onChange={handleModelChange}>\r\n//               <option value=\"davinci-codex\">davinci-codex</option>\r\n//               <option value=\"davinci\">davinci</option>\r\n//               <option value=\"curie\">curie</option>\r\n//               <option value=\"babbage\">babbage</option>\r\n//               <option value=\"ada\">ada</option>\r\n//               <option value=\"gpt-3-175b\">gpt-3-175b</option>\r\n//               <option value=\"gpt-3-13b\">gpt-3-13b</option>\r\n//               <option value=\"gpt-3-6b\">gpt-3-6b</option>\r\n//               <option value=\"gpt-3-2.7b\">gpt-3-2.7b</option>\r\n//               <option value=\"gpt-3-1.75b\">gpt-3-1.75b</option>\r\n//               <option value=\"gpt-3-1.3b\">gpt-3-1.3b</option>\r\n//               <option value=\"gpt-3-761\">gpt-3-761</option>\r\n//               <option value=\"gpt-4-0314\">gpt-4-0314</option>\r\n//             </select>\r\n//           </label>\r\n//           <br />\r\n//           <label>\r\n//             Message:\r\n//             <input\r\n//               type=\"text\"\r\n//               value={message}\r\n//               onChange={(event) => setMessage(event.target.value)}\r\n//             />\r\n//           </label>\r\n//           <br />\r\n//           <button type=\"submit\">Send</button>\r\n//         </form>\r\n//         <div>\r\n//           {result ? <p>{result}</p> : null}\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n  \r\n//   export default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA,CAACF,OAAO;MAACK,MAAM,EAAC,cAAc;MAACC,KAAK,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV;AAACC,EAAA,GANQR,GAAG;AAQZ,eAAeA,GAAG;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}